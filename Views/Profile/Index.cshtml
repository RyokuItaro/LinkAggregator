@model PaginatedLinkList<LinkEntity>
@using Microsoft.AspNetCore.Identity
@inject UserManager<UserEntity> UserManager
@{
    var prevDisabled = !Model.PreviousPage ? "disabled btn-dark" : "btn-primary";
    var nextDisabled = !Model.NextPage ? "disabled btn-dark" : "btn-primary";
    var currentUser = await UserManager.GetUserAsync(User);
    var currentUserName = currentUser.VisibleName;
    var usersLinks = Model.Where(link => link.Creator == currentUserName);
}

<div class="col">
    <span>Here are some links added by you!</span>
<ul class="list-group">
    @foreach (var item in usersLinks)
    {
        <li class="list-group-item d-flex flex-row align-items-center">
            <div class="ms-2">
                <div class="">
                    <span class="fw-bold">@item.Title</span>
                    <span class=""><a href="http://@item.Url" class="text-decoration-none">@item.Url</a></span>
                </div>
                <div class="ms-auto">
                    <span class="text-muted">Added on: @item.CreationDate</span>
                    <span class="">// by: @item.Creator</span>
                </div>
            </div>
            @if (item.Points > 0)
            {
                <span class="badge bg-success rounded-pill ms-auto">Score: @item.Points</span>
            }
            else if (item.Points < 0)
            {
                <span class="badge bg-danger rounded-pill ms-auto">Score: @item.Points</span>
            }
            else
            {
                <span class="badge bg-secondary rounded-pill ms-auto">Score: @item.Points</span>
            }
        </li>
    }
</ul>

<div class="p-0 justify-content-center d-flex">
    <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)" class="btn @prevDisabled"><i class="bi bi-arrow-left"></i></a>
    <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)" class="btn @nextDisabled"><i class="bi bi-arrow-right"></i></a>
</div>
</div>